/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.133.27428.63074130d61b
 * Contact: api-support@onshape.zendesk.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTJPath3073 struct for BTJPath3073
type BTJPath3073 struct {
	StartNode string                     `json:"startNode"`
	Path      *[]BTJPathElementInterface `json:"path,omitempty"`
	BtType    *string                    `json:"btType,omitempty"`
}

// NewBTJPath3073 instantiates a new BTJPath3073 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTJPath3073(startNode string) *BTJPath3073 {
	this := BTJPath3073{}
	this.StartNode = startNode
	return &this
}

// NewBTJPath3073WithDefaults instantiates a new BTJPath3073 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTJPath3073WithDefaults() *BTJPath3073 {
	this := BTJPath3073{}
	return &this
}

// GetStartNode returns the StartNode field value
func (o *BTJPath3073) GetStartNode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartNode
}

// GetStartNodeOk returns a tuple with the StartNode field value
// and a boolean to check if the value has been set.
func (o *BTJPath3073) GetStartNodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartNode, true
}

// SetStartNode sets field value
func (o *BTJPath3073) SetStartNode(v string) {
	o.StartNode = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *BTJPath3073) GetPath() []BTJPathElementInterface {
	if o == nil || o.Path == nil {
		var ret []BTJPathElementInterface
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTJPath3073) GetPathOk() (*[]BTJPathElementInterface, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *BTJPath3073) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given []BTJPathElement2297 and assigns it to the Path field.
func (o *BTJPath3073) SetPath(v []BTJPathElementInterface) {
	o.Path = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTJPath3073) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTJPath3073) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTJPath3073) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTJPath3073) SetBtType(v string) {
	o.BtType = &v
}

func (o BTJPath3073) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["startNode"] = o.StartNode
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	return json.Marshal(toSerialize)
}

type NullableBTJPath3073 struct {
	value *BTJPath3073
	isSet bool
}

func (v NullableBTJPath3073) Get() *BTJPath3073 {
	return v.value
}

func (v *NullableBTJPath3073) Set(val *BTJPath3073) {
	v.value = val
	v.isSet = true
}

func (v NullableBTJPath3073) IsSet() bool {
	return v.isSet
}

func (v *NullableBTJPath3073) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTJPath3073(val *BTJPath3073) *NullableBTJPath3073 {
	return &NullableBTJPath3073{value: val, isSet: true}
}

func (v NullableBTJPath3073) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTJPath3073) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
